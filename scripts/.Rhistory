coord_sf(datum = st_crs(pub)) +
theme_bw()  +
theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5),
axis.text.y = element_text(angle = 45, hjust = 0.5, vjust = 0.5),
legend.position = 'bottom')
ggplot() +
geom_sf(data = pub, aes(fill = Unit), alpha = 0.4) +
geom_sf(data = hab, alpha = 0.5) +
geom_sf(data = rand_pts, aes(color = Plot_ID), shape = 22) +
geom_sf(data = walk_routes) +
coord_sf(datum = st_crs(pub)) +
theme_bw()  +
theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5),
axis.text.y = element_text(angle = 45, hjust = 0.5, vjust = 0.5),
legend.position = 'bottom')
ggplot() +
geom_sf(data = pub, aes(fill = Unit), alpha = 0.4) +
geom_sf(data = hab, alpha = 0.5) +
geom_sf(data = rand_pts, aes(color = Plot_ID), shape = 22) +
geom_sf(data = walk_routes) +
coord_sf(datum = st_crs(pub)) +
theme_bw()  +
theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5),
axis.text.y = element_text(angle = 45, hjust = 0.5, vjust = 0.5),
legend.position = 'bottom')
ggplot() +
geom_sf(data = pub, aes(fill = Unit), alpha = 0.4) +
geom_sf(data = hab, alpha = 0.5) +
geom_sf(data = rand_pts, aes(color = Plot_ID), shape = 15) +
geom_sf(data = walk_routes) +
coord_sf(datum = st_crs(pub)) +
theme_bw()  +
theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5),
axis.text.y = element_text(angle = 45, hjust = 0.5, vjust = 0.5),
legend.position = 'bottom')
ggplot() +
geom_sf(data = pub, aes(fill = Unit), alpha = 0.4) +
geom_sf(data = hab, alpha = 0.5) +
geom_sf(data = walk_routes) +
geom_sf(data = rand_pts, aes(color = Plot_ID), shape = 15) +
coord_sf(datum = st_crs(pub)) +
theme_bw()  +
theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5),
axis.text.y = element_text(angle = 45, hjust = 0.5, vjust = 0.5),
legend.position = 'bottom')
rand_pts <- st_sample(target_hab, size = 60, type = 'regular') %>%
st_sf() %>%
mutate(Plot_ID = n():nrow(.), .before = 1)
View(rand_pts)
knitr::opts_chunk$set(echo = F)
knitr::opts_chunk$set(dpi = 300)
knitr::opts_chunk$set(message = F)
knitr::opts_chunk$set(warning = F)
knitr::opts_chunk$set(fig.align="left")
library(tidyverse)
library(sf)
library(terra)
library(smoothr)
set.seed(13)
hab <- st_read('../data/solidago-habitat/solidago-habitat.shp', quiet = T)
hab <- st_make_valid(hab) %>%
st_union() %>%
st_cast('POLYGON') %>%
st_transform(26910) %>%
st_sf() %>%
smoothr::smooth(., method = "chaikin")
hab <- st_buffer(hab, singleSide = T, dist = -10)
rand_pts <- st_sample(hab, size = 100) %>%
st_sf()
pub <- st_read('../data/PADUS3/PADUS3_0Combined_StateCA.shp', quiet = T) %>%
select(d_Own_Name, Unit_Nm)
hab1 <- st_transform(hab, st_crs(pub))
parcels <- st_intersects(hab1, pub)
pub <- pub[unique(unlist(parcels)),] %>%
st_transform(., st_crs(hab)) %>%
st_crop(., st_bbox(st_buffer(hab, 2500)))
rm(parcels, hab1)
pub <- pub %>%
filter(Unit_Nm == 'Humboldt Bay National Wildlife Refuge') %>%
rename(Unit = Unit_Nm)
target_hab <- st_intersection(hab, pub)
target_hab <- st_buffer(target_hab, dist = -15, singleSide = T)
rand_pts <- st_sample(target_hab, size = 60, type = 'regular') %>%
st_sf() %>%
mutate(Plot_ID = 1:n(), .before = 1)
foredune <- st_read('../data/foredune/foredune.shp', quiet = T) %>%
st_union() %>%
st_as_sf() %>%
rename(geometry = x) %>%
st_transform(., st_crs(hab)) %>%
st_buffer(50)
foredune <- data.frame(foredune = st_intersects(rand_pts, foredune) %>% lengths > 0 )
rand_pts <- bind_cols(rand_pts, foredune)
walk_routes <- rand_pts %>%
group_by(foredune) %>%
summarise(do_union = FALSE) %>%
st_cast("LINESTRING")
ggplot() +
geom_sf(data = pub, aes(fill = Unit), alpha = 0.4) +
geom_sf(data = hab, alpha = 0.5) +
geom_sf(data = walk_routes) +
geom_sf(data = rand_pts, aes(color = Plot_ID), shape = 15) +
coord_sf(datum = st_crs(pub)) +
theme_bw()  +
theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5),
axis.text.y = element_text(angle = 45, hjust = 0.5, vjust = 0.5),
legend.position = 'bottom')
rm(foredune)
rand_pts %>%
mutate(X = sf::st_coordinates(.)[,1],
Y = sf::st_coordinates(.)[,2], .before = 'geometry')
ggplot() +
geom_sf(data = pub, aes(fill = Unit), alpha = 0.4) +
geom_sf(data = hab, alpha = 0.5) +
geom_sf(data = walk_routes) +
geom_sf(data = rand_pts, aes(color = Plot_ID), shape = 15) +
coord_sf(datum = st_crs(pub)) +
theme_bw()  +
theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5),
axis.text.y = element_text(angle = 45, hjust = 0.5, vjust = 0.5),
legend.position = 'bottom', legend.box="vertical")
rand_pts <- st_sample(target_hab, size = 60, type = 'regular') %>%
st_sf() %>%
mutate(Plot = 1:n(), .before = 1)
foredune <- st_read('../data/foredune/foredune.shp', quiet = T) %>%
st_union() %>%
st_as_sf() %>%
rename(geometry = x) %>%
st_transform(., st_crs(hab)) %>%
st_buffer(50)
foredune <- data.frame(foredune = st_intersects(rand_pts, foredune) %>% lengths > 0 )
rand_pts <- bind_cols(rand_pts, foredune)
walk_routes <- rand_pts %>%
group_by(foredune) %>%
summarise(do_union = FALSE) %>%
st_cast("LINESTRING")
ggplot() +
geom_sf(data = pub, aes(fill = Unit), alpha = 0.4) +
geom_sf(data = hab, alpha = 0.5) +
geom_sf(data = walk_routes) +
geom_sf(data = rand_pts, aes(color = Plot), shape = 15) +
coord_sf(datum = st_crs(pub)) +
theme_bw()  +
theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5),
axis.text.y = element_text(angle = 45, hjust = 0.5, vjust = 0.5),
legend.position = 'bottom', legend.box="vertical")
writeOGR(rand_pts, dsn="../data/geodata/Plot-locations.gpx",
dataset_options="GPX_USE_EXTENSIONS=yes", layer="waypoints", driver="GPX",
overwrite_layer = T)
?writeOGR
?writeOGR
rgdal::writeOGR(rand_pts, dsn="../data/geodata/Plot-locations.gpx",
dataset_options="GPX_USE_EXTENSIONS=yes", layer="waypoints", driver="GPX",
overwrite_layer = T)
st_write(rand_pts, dsn="../data/geodata/Plot-locations.gpx")
st_write(rand_pts, dsn="../data/geodata/Plot-locations.gpx", driver = "GPX")
st_write(rand_pts, dsn = "../results/geodata/Plot-locations.gpx", driver = "GPX")
View(rand_pts)
select(rand_pts, Plot) %>%
st_write(., dsn = "../results/geodata/Plot-locations.gpx", driver = "GPX")
?st_write
st_drivers
st_drivers()
select(rand_pts, Plot) %>%
st_write(., dsn = "../results/geodata/Plot-locations.GPX", driver = "GPX")
st_write(hab, dsn = "../results/geodata/walking.GPX", driver = "GPX")
st_write(hab, dsn = "../results/geodata/walking", driver = "GPX")
st_write(hab, dsn = "../results/geodata/walking.GPX", driver = "GPX",
layer = "walking")
select(rand_pts, Plot) %>%
as(., "Spatial")
select(rand_pts, Plot) %>%
as(., "Spatial") %>%
st_write(., dsn = "../results/geodata/Plot-locations.GPX", driver = "GPX")
select(rand_pts, Plot) %>%
as(., "Spatial") %>%
writeOGR(., dsn = "../results/geodata/Plot-locations.gpx", driver = "GPX",
dataset_options = "GPX_USE_EXTENSIONS=yes")
select(rand_pts, Plot) %>%
as(., "Spatial") %>%
rgdal::writeOGR(., dsn = "../results/geodata/Plot-locations.gpx", driver = "GPX",
dataset_options = "GPX_USE_EXTENSIONS=yes")
rand_pts <- select(rand_pts, Plot) %>%
as(., "Spatial")
rgdal::writeOGR(rand_pts, dsn = "../results/geodata/Plot-locations.gpx", driver = "GPX",
dataset_options = "GPX_USE_EXTENSIONS=yes")
rgdal::writeOGR(layer = rand_pts, dsn = "../results/geodata/Plot-locations.gpx", driver = "GPX",
dataset_options = "GPX_USE_EXTENSIONS=yes")
select(rand_pts, Plot) %>%
st_transform(4326) %>%
st_write(., dsn = "../results/geodata/Plot-locations.GPX", driver = "GPX")
knitr::opts_chunk$set(echo = F)
knitr::opts_chunk$set(dpi = 300)
knitr::opts_chunk$set(message = F)
knitr::opts_chunk$set(warning = F)
knitr::opts_chunk$set(fig.align="left")
library(tidyverse)
library(sf)
library(terra)
library(smoothr)
set.seed(13)
hab <- st_read('../data/solidago-habitat/solidago-habitat.shp', quiet = T)
hab <- st_make_valid(hab) %>%
st_union() %>%
st_cast('POLYGON') %>%
st_transform(26910) %>%
st_sf() %>%
smoothr::smooth(., method = "chaikin")
hab <- st_buffer(hab, singleSide = T, dist = -10)
rand_pts <- st_sample(hab, size = 100) %>%
st_sf()
pub <- st_read('../data/PADUS3/PADUS3_0Combined_StateCA.shp', quiet = T) %>%
select(d_Own_Name, Unit_Nm)
hab1 <- st_transform(hab, st_crs(pub))
parcels <- st_intersects(hab1, pub)
pub <- pub[unique(unlist(parcels)),] %>%
st_transform(., st_crs(hab)) %>%
st_crop(., st_bbox(st_buffer(hab, 2500)))
rm(parcels, hab1)
pub <- pub %>%
filter(Unit_Nm == 'Humboldt Bay National Wildlife Refuge') %>%
rename(Unit = Unit_Nm)
target_hab <- st_intersection(hab, pub)
target_hab <- st_buffer(target_hab, dist = -15, singleSide = T)
rand_pts <- st_sample(target_hab, size = 60, type = 'regular') %>%
st_sf() %>%
mutate(Plot = 1:n(), .before = 1)
foredune <- st_read('../data/foredune/foredune.shp', quiet = T) %>%
st_union() %>%
st_as_sf() %>%
rename(geometry = x) %>%
st_transform(., st_crs(hab)) %>%
st_buffer(50)
foredune <- data.frame(foredune = st_intersects(rand_pts, foredune) %>% lengths > 0 )
rand_pts <- bind_cols(rand_pts, foredune)
walk_routes <- rand_pts %>%
group_by(foredune) %>%
summarise(do_union = FALSE) %>%
st_cast("LINESTRING")
ggplot() +
geom_sf(data = pub, aes(fill = Unit), alpha = 0.4) +
geom_sf(data = hab, alpha = 0.5) +
geom_sf(data = walk_routes) +
geom_sf(data = rand_pts, aes(color = Plot), shape = 15) +
coord_sf(datum = st_crs(pub)) +
theme_bw()  +
theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5),
axis.text.y = element_text(angle = 45, hjust = 0.5, vjust = 0.5),
legend.position = 'bottom', legend.box="vertical")
rm(foredune)
rand_pts %>%
mutate(X = sf::st_coordinates(.)[,1],
Y = sf::st_coordinates(.)[,2], .before = 'geometry')
select(rand_pts, Plot) %>%
st_transform(4326) %>%
st_write(., dsn = "../results/geodata/Plot-locations.GPX", driver = "GPX")
select(rand_pts, name = Plot) %>%
st_write(., dsn = "../results/geodata/Plot-locations.GPX", driver = "GPX")
View(hab)
View(walk_routes)
hab %>%
mutate(name = if_else(foredune == TRUE, 'Foredune', 'Backdune')) %>%
st_write(., dsn = "../results/geodata/walking.GPX", driver = "GPX",
layer = "walking")
walk_routes %>%
mutate(name = if_else(foredune == TRUE, 'Foredune', 'Backdune')) %>%
st_write(., dsn = "../results/geodata/walking.GPX", driver = "GPX",
layer = "walking")
walk_routes %>%
mutate(name = if_else(foredune == TRUE, 'Foredune', 'Backdune')) #%>%
walk_routes %>%
mutate(name = if_else(foredune == TRUE, 'Foredune', 'Backdune', .before = geometry)) #%>%
walk_routes %>%
mutate(name = if_else(foredune == TRUE, 'Foredune', 'Backdune', .before = 'geometry')) #%>%
walk_routes %>%
mutate(name = if_else(foredune == TRUE, 'Foredune', 'Backdune'), .before = 'geometry')) #%>%
walk_routes %>%
mutate(name = if_else(foredune == TRUE, 'Foredune', 'Backdune'), .before = 'geometry') #%>%
walk_routes %>%
mutate(name = if_else(foredune == TRUE, 'Foredune', 'Backdune'), .before = 'geometry') %>%
select(-foredune) %>%
st_write(., dsn = "../results/geodata/walking.GPX", driver = "GPX",
layer = "walking")
walk_routes %>%
mutate(name = if_else(foredune == TRUE, 'Foredune', 'Backdune'), .before = 'geometry') %>%
select(-foredune) #%>%
walk_routes %>%
mutate(name = if_else(foredune == TRUE, 'Foredune', 'Backdune'), .before = 'geometry') %>%
select(-foredune) %>%
st_write(., dsn = "../results/geodata/walking.GPX", driver = "GPX",
layer = "walking")
walk_routes %>%
mutate(name = if_else(foredune == TRUE, 'Foredune', 'Backdune'), .before = 'geometry') %>%
select(-foredune) %>%
st_write(., dsn = "../results/geodata/walking.GPX", driver = "GPX")
walk_routes %>%
mutate(name = if_else(foredune == TRUE, 'Foredune', 'Backdune'), .before = 'geometry') %>%
select(-foredune) #%>%
View(walk_routes)
walk_routes %>%
mutate(name = if_else(foredune == TRUE, 'Foredune', 'Backdune'), .before = 'geometry') %>%
select(-foredune) #%>%
walk_routes %>%
mutate(name = if_else(foredune == TRUE, 'Foredune', 'Backdune'), .before = 'geometry') %>%
select(-foredune) %>%
st_write(., dsn = "../results/geodata/walking.GPX", driver = "GPX")
library(tidyverse)
p2preds <- '/media/sagesteppe/ExternalHD/SoS_GB/scouting/results/maps'
list.files(path = p2preds, pattern = 'tif$')
files <- list.files(path = p2preds, pattern = 'tif$')
lirbary(sf)
library(sf)
library(terra)
preds <- rast(file.path(p2preds, files))
rm(p2preds, files)
library(tigris)
plot(preds[[1]])
plot(preds[[2]])
plot(preds[[3]])
plot(preds[[5]])
plot(preds[[9]])
st <- states()
View(st)
st <- states() %>%
filter(STUSPS %in% c('NV', 'CA', 'ID', 'UT'))
st <- states() %>%
filter(STUSPS %in% c('NV', 'CA', 'ID', 'UT', 'AZ'))
plot(st)
st <- states() %>%
filter(STUSPS %in% c('NV', 'CA', 'ID', 'UT', 'AZ', 'OR'))
st <- states() %>%
filter(STUSPS %in% c('NV', 'CA', 'ID', 'UT', 'AZ', 'OR')) %>%
select(STUSPS)
plot(st)
p2preds <- '/media/sagesteppe/ExternalHD/SoS_GB/scouting/results/preds_cat'
files <- list.files(path = p2preds, pattern = 'tif$')
preds <- rast(file.path(p2preds, files))
rm(p2preds, files)
plot(preds[[2]])
plot(preds[[4]])
plot(preds[[6]])
plot(preds[[9]])
plot(preds[[15]])
plot(preds[[15]])
plot(preds[[25]])
plot(preds[[32]])
plot(preds[[37]])
p37 <- as.data.frame(preds[[37]])
View(p37)
hillshade <- as.data.frame(hill, xy = T)
ggplot() +
geom_raster(data = p37, aes(x = x, y = y, fill = lyr1),
interpolate = F)  +
scale_fill_gradient(low = "grey50", high = "grey100")
p37 <- as.data.frame(preds[[37]], xy= T)
ggplot() +
geom_raster(data = p37, aes(x = x, y = y, fill = lyr1),
interpolate = F)  +
scale_fill_gradient(low = "grey50", high = "grey100")
View(p37)
colnames[p37]
colnames(p37)
ggplot() +
geom_raster(data = p37, aes(x = x, y = y, fill = Lomatium_triternatum_2023-04-09),
interpolate = F)  +
scale_fill_gradient(low = "grey50", high = "grey100")
ggplot() +
geom_raster(data = p37, aes(x = x, y = y, fill = 'Lomatium_triternatum_2023-04-09'),
interpolate = F)  +
scale_fill_gradient(low = "grey50", high = "grey100")
ggplot() +
geom_raster(data = p37, aes(x = x, y = y, color = 'Lomatium_triternatum_2023-04-09'),
interpolate = F)  +
scale_fill_gradient(low = "grey50", high = "grey100")
ggplot() +
geom_raster(data = p37, aes(x = x, y = y, fill = 'Lomatium_triternatum_2023-04-09'),
interpolate = F)  +
scale_fill_gradient(low = "grey50", high = "grey100")
ggplot() +
geom_raster(data = p37, aes(x = x, y = y, color = 'Lomatium_triternatum_2023-04-09'),
interpolate = F)  +
scale_fill_gradient(low = "grey50", high = "grey100")
View(preds)
p37 %>%
mtuate(3 = jitter(3))
names(preds)
gsub(names(preds), ['0-9'])
gsub(names(preds), ['0-9']))
gsub(names(preds), ['0-9']))
gsub(names(preds), '[0-9]')
gsub('[0-9]', names(preds))
?gsub
gsub('[0-9]', "," names(preds))
gsub('[0-9]', "", names(preds))
gsub('[0-9][-]', "", names(preds))
gsub('[0-9-]', "", names(preds))
gsub('_[0-9-]', "", names(preds))
gsub('_[0-9].^', "", names(preds))
gsub('_2023.^', "", names(preds))
gsub('_2023.*^', "", names(preds))
gsub('_2023.*$', "", names(preds))
names(preds) <- gsub('_2023.*$', "", names(preds))
hillshade <- as.data.frame(hill, xy = T)
p37 <- as.data.frame(preds[[37]], xy= T)
p37 %>%
mtuate(Lomatium_triternatum = jitter(Lomatium_triternatum))
p37 %>%
mutate(Lomatium_triternatum = jitter(Lomatium_triternatum))
p37 <- p37 %>%
mutate(Lomatium_triternatum = jitter(Lomatium_triternatum))
ggplot() +
geom_raster(data = p37, aes(x = x, y = y, color = 'Lomatium_triternatum'),
interpolate = F)  +
scale_fill_gradient(low = "grey50", high = "grey100")
ggplot() +
geom_raster(data = p37, aes(x = x, y = y, fill = 'Lomatium_triternatum'),
interpolate = F)  +
scale_fill_gradient(low = "grey50", high = "grey100")
ggplot() +
geom_tile(data = p37, aes(x = x, y = y, fill = 'Lomatium_triternatum'),
interpolate = F)  +
scale_fill_gradient(low = "grey50", high = "grey100")
ggplot() +
geom_tile(data = p37, aes(x = x, y = y, fill = 'Lomatium_triternatum'))  +
scale_fill_gradient(low = "grey50", high = "grey100")
preds <- aggregate(preds, 10)
# hillshade <- as.data.frame(hill, xy = T)
p37 <- as.data.frame(preds[[37]], xy= T)
p37 <- p37 %>%
mutate(Lomatium_triternatum = jitter(Lomatium_triternatum))
ggplot() +
geom_tile(data = p37, aes(x = x, y = y, fill = 'Lomatium_triternatum'))  +
scale_fill_gradient(low = "grey50", high = "grey100")
ggplot() +
geom_tile(data = p37, aes(x = x, y = y, fill = Lomatium_triternatum))  +
scale_fill_gradient(low = "grey50", high = "grey100")
ggplot() +
geom_tile(data = p37, aes(x = x, y = y, fill = Lomatium_triternatum))  +
scale_fill_gradient(low = "grey50", high = "grey100") +
theme_bw()
p2preds <- '/media/sagesteppe/ExternalHD/SoS_GB/scouting/results/preds_cat'
files <- list.files(path = p2preds, pattern = 'tif$')
preds <- rast(file.path(p2preds, files))
names(preds) <- gsub('_2023.*$', "", names(preds))
preds <- aggregate(preds, 5)
ggplot() +
geom_tile(data = p37, aes(x = x, y = y, fill = Lomatium_triternatum))  +
scale_fill_gradient(low = "grey50", high = "grey100") +
theme_bw()
# hillshade <- as.data.frame(hill, xy = T)
p37 <- as.data.frame(preds[[37]], xy= T)
p37 <- p37 %>%
mutate(Lomatium_triternatum = jitter(Lomatium_triternatum))
ggplot() +
geom_tile(data = p37, aes(x = x, y = y, fill = Lomatium_triternatum))  +
scale_fill_gradient(low = "grey50", high = "grey100") +
theme_bw()
# import cartographic dataset here
list.files('../data/spatial')
setwd('~/Documents/SoS_GB_EcoRegion_Species_Talk')
# import cartographic dataset here
list.files('../data/spatial')
setwd('~/Documents/SoS_GB_EcoRegion_Species_Talk/scipts')
setwd('~/Documents/SoS_GB_EcoRegion_Species_Talk/scripts')
# import cartographic dataset here
list.files('../data/spatial')
green1 <- '../data/spatial/consensus_full_class_1.tif'
green2 <- '../data/spatial/consensus_full_class_3.tif'
plot(green1)
green1 <- rast('../data/spatial/consensus_full_class_1.tif')
crs(green1)
st_v <- vect(st)
green1 <- crop(green1, st_v)
plot(green1)
green2 <- crop(rast('../data/spatial/consensus_full_class_3.tif'), st_v)
plot(green2)
greem3 <- sum(green1, green2)
plot(greem3)
green3 <- sum(green1, green2)
rm(green1, green2)
rm(green1, green2)
rm(greem3)
rm(green1, green2, st_v)
# import state boundaries here
st <- states() %>%
filter(STUSPS %in% c('NV', 'CA', 'ID', 'UT', 'AZ', 'OR')) %>%
select(STUSPS)
# import tree cover for forest cover
st_v <- vect(st)
# import mountains to create hillshade
hills <- crop(rast('../data/spatial/elevation_1KMmd_GMTEDmd.tif'), st_v)
plot(hills)
slope <- terrain(hills, "slope", unit="radians")
aspect <- terrain(hills, "aspect", unit="radians")
hill <- shade(slope, aspect, 30, 315)
plot(hill)
plot(hill, col=rainbow(25, alpha=0.35), add=TRUE)
plot(hill, col=rainbow(25, alpha=0.35), add=TRUE)
plot(hills, col=rainbow(25, alpha=0.35), add=TRUE)
plot(slope)
rm(st_v, slope, aspect)
hillshade <- as.data.frame(hill, xy = T)
dem <- as.data.frame(hills, xy = T)
rm(st_v, slope, aspect, hill, hills)
ggplot() +
geom_tile(data = hillshade, aes(x = x, y = y, fill = Lomatium_triternatum))  +
scale_fill_gradient(low = "grey50", high = "grey100") +
theme_bw()
ggplot() +
geom_tile(data = hillshade, aes(x = x, y = y, fill = lyr1))  +
scale_fill_gradient(low = "grey50", high = "grey100") +
theme_bw()
